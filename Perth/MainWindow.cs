using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.IO.Pipes;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Forms;
using System.Windows.Input;
using System.Windows.Markup;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Imaging;
using System.Windows.Threading;
using AceAPI;
using CefSharp.Wpf;
using Perth.RPC;

namespace Perth
{
	// Token: 0x02000005 RID: 5
	public class MainWindow : Window, IComponentConnector, IStyleConnector
	{
		// Token: 0x06000014 RID: 20 RVA: 0x000025CC File Offset: 0x000007CC
		private void dispatcherTimer_Tick(object sender, EventArgs e)
		{
			if (this.AutoInject)
			{
				if (File.Exists(System.Windows.Forms.Application.StartupPath + "/PSUExploit.dll"))
				{
					Process[] processes = Process.GetProcesses();
					int i = 0;
					while (i < processes.Length)
					{
						if (processes[i].ProcessName == "RobloxPlayerBeta")
						{
							if (processes[i].Id == this.LastPID_InjectedInto)
							{
								return;
							}
							this.LastPID_InjectedInto = processes[i].Id;
							new Process
							{
								StartInfo = new ProcessStartInfo
								{
									WindowStyle = ProcessWindowStyle.Hidden,
									FileName = "cmd.exe",
									Arguments = "/C Inject.bat",
									WorkingDirectory = System.Windows.Forms.Application.StartupPath
								}
							}.Start();
							return;
						}
						else
						{
							i++;
						}
					}
					return;
				}
				System.Windows.MessageBox.Show("Exploit module not found. Please disable all anti viruses before using PSU exploit", "PSU inject");
				this.AutoInject = false;
				this.dispatcherTimer.Stop();
				this.whomst.IsChecked = new bool?(false);
			}
		}

		// Token: 0x06000015 RID: 21 RVA: 0x000026B8 File Offset: 0x000008B8
		public MainWindow()
		{
			this.dispatcherTimer.Tick += this.dispatcherTimer_Tick;
			this.dispatcherTimer.Interval = new TimeSpan(0, 0, 9);
			this.InitializeComponent();
			this.ToolTipCheck = true;
			this.execute_vorder.Visibility = Visibility.Hidden;
			this.gay_label.Visibility = Visibility.Hidden;
			this.execute_vorder_Copy.Visibility = Visibility.Hidden;
			this.gay_label_Copy.Visibility = Visibility.Hidden;
			this.execute_vorder_Copy2.Visibility = Visibility.Hidden;
			this.gay_label_Copy2.Visibility = Visibility.Hidden;
			this.execute_vorder_Copy1.Visibility = Visibility.Hidden;
			this.gay_label_Copy1.Visibility = Visibility.Hidden;
			this.execute_vorder_Copy4.Visibility = Visibility.Hidden;
			this.gay_label_Copy4.Visibility = Visibility.Hidden;
			this.execute_vorder_Copy3.Visibility = Visibility.Hidden;
			this.gay_label_Copy3.Visibility = Visibility.Hidden;
			this.FilePanel.Visibility = Visibility.Hidden;
			this.ViewPanel.Visibility = Visibility.Hidden;
			this.StartAnims();
		}

		// Token: 0x06000016 RID: 22 RVA: 0x000027E4 File Offset: 0x000009E4
		public void StartAnims()
		{
			MainWindow.<StartAnims>d__8 <StartAnims>d__;
			<StartAnims>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
			<StartAnims>d__.<>4__this = this;
			<StartAnims>d__.<>1__state = -1;
			<StartAnims>d__.<>t__builder.Start<MainWindow.<StartAnims>d__8>(ref <StartAnims>d__);
		}

		// Token: 0x06000017 RID: 23 RVA: 0x0000281B File Offset: 0x00000A1B
		private void DragWindow(object sender, MouseButtonEventArgs e)
		{
		}

		// Token: 0x17000002 RID: 2
		// (get) Token: 0x06000018 RID: 24 RVA: 0x0000281D File Offset: 0x00000A1D
		// (set) Token: 0x06000019 RID: 25 RVA: 0x00002825 File Offset: 0x00000A25
		private IEasingFunction MarginEasing { get; set; } = new QuarticEase
		{
			EasingMode = EasingMode.EaseInOut
		};

		// Token: 0x0600001A RID: 26 RVA: 0x00002830 File Offset: 0x00000A30
		public ListBoxItem CreateScriptHub(string Name, string ScriptSource, string ImageLink)
		{
			ListBoxItem listBoxItem = new ListBoxItem();
			listBoxItem.HorizontalAlignment = System.Windows.HorizontalAlignment.Center;
			listBoxItem.VerticalAlignment = VerticalAlignment.Top;
			listBoxItem.Height = 63.0;
			listBoxItem.BorderThickness = new Thickness(2.0);
			listBoxItem.BorderBrush = new SolidColorBrush(Color.FromRgb(40, 40, 40));
			Grid grid = new Grid();
			grid.Height = 63.0;
			grid.Width = 98.0;
			grid.Margin = new Thickness(-5.0, -3.0, -5.0, -3.0);
			Image image = new Image();
			BitmapImage bitmapImage = new BitmapImage();
			bitmapImage.BeginInit();
			bitmapImage.UriSource = new Uri(ImageLink, UriKind.Absolute);
			bitmapImage.EndInit();
			RenderOptions.SetBitmapScalingMode(image, BitmapScalingMode.HighQuality);
			image.Source = bitmapImage;
			image.Opacity = 1.0;
			image.Height = 41.0;
			image.Width = 98.0;
			image.VerticalAlignment = VerticalAlignment.Top;
			image.HorizontalAlignment = System.Windows.HorizontalAlignment.Left;
			image.Stretch = Stretch.Fill;
			System.Windows.Controls.Label label = new System.Windows.Controls.Label();
			label.BorderThickness = new Thickness(0.0, 1.0, 0.0, 0.0);
			label.HorizontalContentAlignment = System.Windows.HorizontalAlignment.Center;
			label.VerticalContentAlignment = VerticalAlignment.Top;
			label.HorizontalAlignment = System.Windows.HorizontalAlignment.Left;
			label.VerticalAlignment = VerticalAlignment.Top;
			label.Margin = new Thickness(0.0, 41.0, 0.0, 0.0);
			label.Height = 22.0;
			label.Width = 98.0;
			label.FontSize = 9.0;
			label.Foreground = new SolidColorBrush(Color.FromRgb(153, 153, 153));
			label.BorderBrush = new SolidColorBrush(Color.FromRgb(40, 40, 40));
			label.Content = Name;
			grid.Children.Add(image);
			grid.Children.Add(label);
			listBoxItem.Content = grid;
			listBoxItem.MouseUp += delegate(object sender, MouseButtonEventArgs e)
			{
				this.RunScript(ScriptSource);
			};
			return listBoxItem;
		}

		// Token: 0x14000001 RID: 1
		// (add) Token: 0x0600001B RID: 27 RVA: 0x00002A90 File Offset: 0x00000C90
		// (remove) Token: 0x0600001C RID: 28 RVA: 0x00002AC8 File Offset: 0x00000CC8
		public event MainWindow.EventHandler EventHandlera;

		// Token: 0x0600001D RID: 29 RVA: 0x00002B00 File Offset: 0x00000D00
		private void Begin(object sender, RoutedEventArgs e)
		{
			MainWindow.<Begin>d__20 <Begin>d__;
			<Begin>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
			<Begin>d__.<>4__this = this;
			<Begin>d__.<>1__state = -1;
			<Begin>d__.<>t__builder.Start<MainWindow.<Begin>d__20>(ref <Begin>d__);
		}

		// Token: 0x0600001E RID: 30 RVA: 0x00002B38 File Offset: 0x00000D38
		public void Shifter(DependencyObject Object, Thickness Get, Thickness Set)
		{
			MainWindow.<Shifter>d__26 <Shifter>d__;
			<Shifter>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
			<Shifter>d__.<>4__this = this;
			<Shifter>d__.Object = Object;
			<Shifter>d__.Get = Get;
			<Shifter>d__.Set = Set;
			<Shifter>d__.<>1__state = -1;
			<Shifter>d__.<>t__builder.Start<MainWindow.<Shifter>d__26>(ref <Shifter>d__);
		}

		// Token: 0x0600001F RID: 31 RVA: 0x00002B88 File Offset: 0x00000D88
		private void OpenScripts(object sender, RoutedEventArgs e)
		{
			if (!this.CurrentOpen)
			{
				if (this.ScriptsCheck)
				{
					this.GamesGrid.Visibility = Visibility.Visible;
					this.Shifter(this.ScriptsGrid, this.ScriptsGrid.Margin, this.GamesGrid.Margin);
					this.Shifter(this.GamesGrid, this.GamesGrid.Margin, this.ScriptsGrid.Margin);
					this.GamesCheck = true;
				}
				if (this.GamesCheck)
				{
					this.ScriptsGrid.Visibility = Visibility.Visible;
					this.Shifter(this.ScriptsGrid, this.ScriptsGrid.Margin, this.GamesGrid.Margin);
					this.Shifter(this.GamesGrid, this.GamesGrid.Margin, this.ScriptsGrid.Margin);
					this.ScriptsCheck = true;
				}
			}
		}

		// Token: 0x06000020 RID: 32 RVA: 0x00002C60 File Offset: 0x00000E60
		private void OpenSettings(object sender, RoutedEventArgs e)
		{
			if (!this.CurrentOpen)
			{
				if (this.ScriptsCheck)
				{
					this.GamesGrid.Visibility = Visibility.Visible;
					this.Shifter(this.ScriptsGrid, this.ScriptsGrid.Margin, this.GamesGrid.Margin);
					this.Shifter(this.SettingsGrid, this.GamesGrid.Margin, this.ScriptsGrid.Margin);
					this.Shifter(this.GamesGrid, this.GamesGrid.Margin, this.ScriptsGrid.Margin);
					this.GamesCheck = true;
				}
				if (this.GamesCheck)
				{
					this.ScriptsGrid.Visibility = Visibility.Visible;
					this.Shifter(this.ScriptsGrid, this.ScriptsGrid.Margin, this.GamesGrid.Margin);
					this.Shifter(this.SettingsGrid, this.GamesGrid.Margin, this.ScriptsGrid.Margin);
					this.Shifter(this.GamesGrid, this.GamesGrid.Margin, this.ScriptsGrid.Margin);
					this.ScriptsCheck = true;
				}
				if (this.SettingsCheck)
				{
					this.GamesGrid.Visibility = Visibility.Visible;
					this.Shifter(this.ScriptsGrid, this.ScriptsGrid.Margin, this.GamesGrid.Margin);
					this.Shifter(this.GamesGrid, this.ScriptsGrid.Margin, this.GamesGrid.Margin);
					this.Shifter(this.SettingsGrid, this.GamesGrid.Margin, this.ScriptsGrid.Margin);
					this.SettingsCheck = false;
				}
			}
		}

		// Token: 0x06000021 RID: 33 RVA: 0x00002144 File Offset: 0x00000344
		private void Exit(object sender, RoutedEventArgs e)
		{
			Process.GetCurrentProcess().Kill();
		}

		// Token: 0x06000022 RID: 34 RVA: 0x00002DFB File Offset: 0x00000FFB
		private void Minimize(object sender, RoutedEventArgs e)
		{
			base.WindowState = WindowState.Minimized;
		}

		// Token: 0x06000023 RID: 35 RVA: 0x00002E04 File Offset: 0x00001004
		private void Window_Loaded(object sender, RoutedEventArgs e)
		{
			this.handlers = default(DiscordRpc.EventHandlers);
			DiscordRpc.Initialize("802688213193588737", ref this.handlers, true, null);
			this.handlers = default(DiscordRpc.EventHandlers);
			DiscordRpc.Initialize("802688213193588737", ref this.handlers, true, null);
			this.presence.details = "Perth";
			this.presence.state = "psu-winning";
			this.presence.largeImageKey = "psulogo";
			this.presence.smallImageKey = "Small Logo name";
			this.presence.largeImageText = "PSU Logo";
			DiscordRpc.UpdatePresence(ref this.presence);
		}

		// Token: 0x06000024 RID: 36 RVA: 0x00002EA8 File Offset: 0x000010A8
		private void RestartUI(object sender, RoutedEventArgs e)
		{
			Process.Start(System.Windows.Forms.Application.StartupPath + "\\Perth.exe");
			Process.GetCurrentProcess().Kill();
		}

		// Token: 0x06000025 RID: 37 RVA: 0x00002EC9 File Offset: 0x000010C9
		private void TopMostUnChecked(object sender, RoutedEventArgs e)
		{
			base.Topmost = false;
		}

		// Token: 0x06000026 RID: 38 RVA: 0x00002ED2 File Offset: 0x000010D2
		private void TopMostChecked(object sender, RoutedEventArgs e)
		{
			base.Topmost = true;
		}

		// Token: 0x06000027 RID: 39 RVA: 0x00002EDB File Offset: 0x000010DB
		private void ToolTipChecked(object sender, RoutedEventArgs e)
		{
			this.ToolTipCheck = true;
		}

		// Token: 0x06000028 RID: 40 RVA: 0x00002EE4 File Offset: 0x000010E4
		private void ToolTipUnChecked(object sender, RoutedEventArgs e)
		{
			this.ToolTipCheck = false;
		}

		// Token: 0x06000029 RID: 41 RVA: 0x00002EF0 File Offset: 0x000010F0
		private void ClearButton(object sender, RoutedEventArgs e)
		{
			MainWindow.<ClearButton>d__37 <ClearButton>d__;
			<ClearButton>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
			<ClearButton>d__.<>4__this = this;
			<ClearButton>d__.<>1__state = -1;
			<ClearButton>d__.<>t__builder.Start<MainWindow.<ClearButton>d__37>(ref <ClearButton>d__);
		}

		// Token: 0x0600002A RID: 42 RVA: 0x0000281B File Offset: 0x00000A1B
		private void ListButton(object sender, RoutedEventArgs e)
		{
		}

		// Token: 0x0600002B RID: 43 RVA: 0x00002F28 File Offset: 0x00001128
		private void InjectButton(object sender, RoutedEventArgs e)
		{
			if (Process.GetProcessesByName("Windows10Universal").Length != 0)
			{
				System.Windows.MessageBox.Show("You are running the Windows 10 store version of ROBLOX!\r\nPSU only works on the website version.", "PSU inject");
				return;
			}
			if (Process.GetProcessesByName("RobloxPlayerBeta").Length == 0)
			{
				System.Windows.MessageBox.Show("ROBLOX is not running!", "PSU inject");
				return;
			}
			if (File.Exists(System.Windows.Forms.Application.StartupPath + "/PSUExploit.dll"))
			{
				Process[] processes = Process.GetProcesses();
				int i = 0;
				while (i < processes.Length)
				{
					if (processes[i].ProcessName == "RobloxPlayerBeta")
					{
						if (processes[i].Id == this.LastPID_InjectedInto)
						{
							System.Windows.MessageBox.Show("PSU exploit is already injected!", "PSU Inject");
							return;
						}
						this.LastPID_InjectedInto = processes[i].Id;
						new Process
						{
							StartInfo = new ProcessStartInfo
							{
								WindowStyle = ProcessWindowStyle.Hidden,
								FileName = "cmd.exe",
								Arguments = "/C Inject.bat",
								WorkingDirectory = System.Windows.Forms.Application.StartupPath
							}
						}.Start();
						return;
					}
					else
					{
						i++;
					}
				}
				return;
			}
			System.Windows.MessageBox.Show("Exploit module not found. Please disable all anti viruses before using PSU exploit", "PSU inject");
		}

		// Token: 0x0600002C RID: 44 RVA: 0x00003037 File Offset: 0x00001237
		private TabItem CurrentItem()
		{
			return (TabItem)this.Tabs.SelectedItem;
		}

		// Token: 0x0600002D RID: 45 RVA: 0x00003049 File Offset: 0x00001249
		public ChromiumWebBrowser CurrentEditor()
		{
			return (ChromiumWebBrowser)this.CurrentItem().Content;
		}

		// Token: 0x0600002E RID: 46 RVA: 0x0000305C File Offset: 0x0000125C
		public void RunScript(string script)
		{
			Process[] processes = Process.GetProcesses();
			string Pipe;
			ThreadStart <>9__0;
			for (int i = 0; i < processes.Length; i++)
			{
				if (processes[i].ProcessName == "RobloxPlayerBeta")
				{
					Pipe = "Foynem" + ((uint)processes[i].Id).ToString();
					ThreadStart start;
					if ((start = <>9__0) == null)
					{
						start = (<>9__0 = delegate()
						{
							try
							{
								using (NamedPipeClientStream namedPipeClientStream = new NamedPipeClientStream(".", Pipe, PipeDirection.Out))
								{
									namedPipeClientStream.Connect();
									using (StreamWriter streamWriter = new StreamWriter(namedPipeClientStream, Encoding.Default, 999999))
									{
										streamWriter.Write(script);
										streamWriter.Dispose();
									}
									namedPipeClientStream.Dispose();
								}
							}
							catch (IOException)
							{
							}
							catch (Exception)
							{
							}
						});
					}
					new Thread(start).Start();
					return;
				}
			}
		}

		// Token: 0x0600002F RID: 47 RVA: 0x000030EC File Offset: 0x000012EC
		private void ExecuteButton(object sender, RoutedEventArgs e)
		{
			MainWindow.<ExecuteButton>d__43 <ExecuteButton>d__;
			<ExecuteButton>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
			<ExecuteButton>d__.<>4__this = this;
			<ExecuteButton>d__.<>1__state = -1;
			<ExecuteButton>d__.<>t__builder.Start<MainWindow.<ExecuteButton>d__43>(ref <ExecuteButton>d__);
		}

		// Token: 0x06000030 RID: 48 RVA: 0x00003124 File Offset: 0x00001324
		private void OpenFileButton(object sender, RoutedEventArgs e)
		{
			MainWindow.<OpenFileButton>d__44 <OpenFileButton>d__;
			<OpenFileButton>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
			<OpenFileButton>d__.<>4__this = this;
			<OpenFileButton>d__.<>1__state = -1;
			<OpenFileButton>d__.<>t__builder.Start<MainWindow.<OpenFileButton>d__44>(ref <OpenFileButton>d__);
		}

		// Token: 0x06000031 RID: 49 RVA: 0x0000315B File Offset: 0x0000135B
		private void Execute_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				((Storyboard)base.FindResource("ToolTip1")).Begin();
				this.execute_vorder.Visibility = Visibility.Visible;
				this.gay_label.Visibility = Visibility.Visible;
			}
		}

		// Token: 0x06000032 RID: 50 RVA: 0x00003192 File Offset: 0x00001392
		private void Execute_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				this.execute_vorder.Visibility = Visibility.Hidden;
				this.gay_label.Visibility = Visibility.Hidden;
			}
		}

		// Token: 0x06000033 RID: 51 RVA: 0x000031B4 File Offset: 0x000013B4
		private void Clear_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				((Storyboard)base.FindResource("ToolTip2")).Begin();
				this.execute_vorder_Copy.Visibility = Visibility.Visible;
				this.gay_label_Copy.Visibility = Visibility.Visible;
			}
		}

		// Token: 0x06000034 RID: 52 RVA: 0x000031EB File Offset: 0x000013EB
		private void Clear_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				this.execute_vorder_Copy.Visibility = Visibility.Hidden;
				this.gay_label_Copy.Visibility = Visibility.Hidden;
			}
		}

		// Token: 0x06000035 RID: 53 RVA: 0x0000320D File Offset: 0x0000140D
		private void SaveFile_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				((Storyboard)base.FindResource("ToolTip3")).Begin();
				this.execute_vorder_Copy2.Visibility = Visibility.Visible;
				this.gay_label_Copy2.Visibility = Visibility.Visible;
			}
		}

		// Token: 0x06000036 RID: 54 RVA: 0x00003244 File Offset: 0x00001444
		private void SaveFile_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				this.execute_vorder_Copy2.Visibility = Visibility.Hidden;
				this.gay_label_Copy2.Visibility = Visibility.Hidden;
			}
		}

		// Token: 0x06000037 RID: 55 RVA: 0x00003266 File Offset: 0x00001466
		private void List_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				((Storyboard)base.FindResource("ToolTip4")).Begin();
				this.execute_vorder_Copy1.Visibility = Visibility.Visible;
				this.gay_label_Copy1.Visibility = Visibility.Visible;
			}
		}

		// Token: 0x06000038 RID: 56 RVA: 0x0000329D File Offset: 0x0000149D
		private void List_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				this.execute_vorder_Copy1.Visibility = Visibility.Hidden;
				this.gay_label_Copy1.Visibility = Visibility.Hidden;
			}
		}

		// Token: 0x06000039 RID: 57 RVA: 0x000032BF File Offset: 0x000014BF
		private void Settings_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				((Storyboard)base.FindResource("ToolTip5")).Begin();
				this.execute_vorder_Copy4.Visibility = Visibility.Visible;
				this.gay_label_Copy4.Visibility = Visibility.Visible;
			}
		}

		// Token: 0x0600003A RID: 58 RVA: 0x000032F6 File Offset: 0x000014F6
		private void Settings_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				this.execute_vorder_Copy4.Visibility = Visibility.Hidden;
				this.gay_label_Copy4.Visibility = Visibility.Hidden;
			}
		}

		// Token: 0x0600003B RID: 59 RVA: 0x00003318 File Offset: 0x00001518
		private void Inject_MouseEnter(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				((Storyboard)base.FindResource("ToolTip6")).Begin();
				this.execute_vorder_Copy3.Visibility = Visibility.Visible;
				this.gay_label_Copy3.Visibility = Visibility.Visible;
			}
		}

		// Token: 0x0600003C RID: 60 RVA: 0x0000334F File Offset: 0x0000154F
		private void Inject_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e)
		{
			if (this.ToolTipCheck)
			{
				this.execute_vorder_Copy3.Visibility = Visibility.Hidden;
				this.gay_label_Copy3.Visibility = Visibility.Hidden;
			}
		}

		// Token: 0x0600003D RID: 61 RVA: 0x00003374 File Offset: 0x00001574
		private void SaveFile(object sender, RoutedEventArgs e)
		{
			MainWindow.<SaveFile>d__57 <SaveFile>d__;
			<SaveFile>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
			<SaveFile>d__.<>4__this = this;
			<SaveFile>d__.<>1__state = -1;
			<SaveFile>d__.<>t__builder.Start<MainWindow.<SaveFile>d__57>(ref <SaveFile>d__);
		}

		// Token: 0x0600003E RID: 62 RVA: 0x000033AB File Offset: 0x000015AB
		private void CloseButton_Click(object sender, RoutedEventArgs e)
		{
			if (this.Tabs.Items.Count != 1)
			{
				this.Tabs.Items.Remove(this.Tabs.SelectedItem);
			}
		}

		// Token: 0x0600003F RID: 63 RVA: 0x000033E0 File Offset: 0x000015E0
		private void AddTabButton_Click(object sender, RoutedEventArgs e)
		{
			if (this.Tabs.Items.Count != 8)
			{
				TabItem tabItem = new TabItem();
				AceEditor aceEditor = new AceEditor(false);
				aceEditor.Margin = new Thickness(-1.0, 0.0, 0.0, 0.0);
				tabItem.Header = "Untitled";
				tabItem.Width += 3.0;
				tabItem.Foreground = new SolidColorBrush(Color.FromRgb(153, 153, 153));
				tabItem.Height = 23.0;
				tabItem.IsSelected = true;
				tabItem.Content = aceEditor;
				this.Tabs.SelectedIndex = this.Tabs.Items.Add(tabItem);
			}
		}

		// Token: 0x06000040 RID: 64 RVA: 0x000034BA File Offset: 0x000016BA
		private void FileButton(object sender, RoutedEventArgs e)
		{
			this.FilePanel.Visibility = Visibility.Visible;
		}

		// Token: 0x06000041 RID: 65 RVA: 0x000034C8 File Offset: 0x000016C8
		private void FilePanel_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e)
		{
			this.FilePanel.Visibility = Visibility.Hidden;
		}

		// Token: 0x06000042 RID: 66 RVA: 0x000034D6 File Offset: 0x000016D6
		private void ViewPanel_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e)
		{
			this.ViewPanel.Visibility = Visibility.Hidden;
		}

		// Token: 0x06000043 RID: 67 RVA: 0x000034E4 File Offset: 0x000016E4
		private void DiscordButton(object sender, RoutedEventArgs e)
		{
			Process.Start("https://discord.gg/psu");
		}

		// Token: 0x06000044 RID: 68 RVA: 0x000034F1 File Offset: 0x000016F1
		private void ViewButton(object sender, RoutedEventArgs e)
		{
			this.ViewPanel.Visibility = Visibility.Visible;
		}

		// Token: 0x06000045 RID: 69 RVA: 0x00003500 File Offset: 0x00001700
		private void KillRbx_MouseDown(object sender, MouseButtonEventArgs e)
		{
			Process[] processesByName = Process.GetProcessesByName("RobloxPlayerBeta");
			for (int i = 0; i < processesByName.Length; i++)
			{
				processesByName[i].Kill();
			}
		}

		// Token: 0x06000046 RID: 70 RVA: 0x00003530 File Offset: 0x00001730
		private void KillRbx_MouseDown(object sender, RoutedEventArgs e)
		{
			Process[] processesByName = Process.GetProcessesByName("RobloxPlayerBeta");
			for (int i = 0; i < processesByName.Length; i++)
			{
				processesByName[i].Kill();
			}
		}

		// Token: 0x06000047 RID: 71 RVA: 0x00003560 File Offset: 0x00001760
		private void KillRbx_Click(object sender, RoutedEventArgs e)
		{
			Process[] processesByName = Process.GetProcessesByName("RobloxPlayerBeta");
			for (int i = 0; i < processesByName.Length; i++)
			{
				processesByName[i].Kill();
			}
		}

		// Token: 0x06000048 RID: 72 RVA: 0x0000281B File Offset: 0x00000A1B
		private void Tabs_SelectionChanged(object sender, SelectionChangedEventArgs e)
		{
		}

		// Token: 0x06000049 RID: 73 RVA: 0x00002291 File Offset: 0x00000491
		private void Main_MouseDown(object sender, MouseButtonEventArgs e)
		{
			if (e.ChangedButton == MouseButton.Left)
			{
				base.DragMove();
			}
		}

		// Token: 0x0600004A RID: 74 RVA: 0x0000358E File Offset: 0x0000178E
		private void AutoInjectChecked(object sender, RoutedEventArgs e)
		{
			this.AutoInject = true;
			this.dispatcherTimer.Start();
			if (!File.Exists(System.Windows.Forms.Application.StartupPath + "/AutoInj.bin"))
			{
				File.Create(System.Windows.Forms.Application.StartupPath + "/AutoInj.bin");
			}
		}

		// Token: 0x0600004B RID: 75 RVA: 0x000035CD File Offset: 0x000017CD
		private void AutoInjectUnChecked(object sender, RoutedEventArgs e)
		{
			this.AutoInject = false;
			this.dispatcherTimer.Stop();
			if (File.Exists(System.Windows.Forms.Application.StartupPath + "/AutoInj.bin"))
			{
				File.Delete(System.Windows.Forms.Application.StartupPath + "/AutoInj.bin");
			}
		}

		// Token: 0x0600004C RID: 76 RVA: 0x0000360C File Offset: 0x0000180C
		[DebuggerNonUserCode]
		[GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
		public void InitializeComponent()
		{
			if (this._contentLoaded)
			{
				return;
			}
			this._contentLoaded = true;
			Uri resourceLocator = new Uri("/Perth;component/perthui.xaml", UriKind.Relative);
			System.Windows.Application.LoadComponent(this, resourceLocator);
		}

		// Token: 0x0600004D RID: 77 RVA: 0x0000363C File Offset: 0x0000183C
		[DebuggerNonUserCode]
		[GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
		[EditorBrowsable(EditorBrowsableState.Never)]
		void IComponentConnector.Connect(int connectionId, object target)
		{
			switch (connectionId)
			{
			case 1:
				this.Perth = (MainWindow)target;
				this.Perth.MouseLeftButtonDown += this.DragWindow;
				this.Perth.Loaded += this.Begin;
				return;
			case 4:
				this.Main = (Grid)target;
				this.Main.MouseDown += this.Main_MouseDown;
				return;
			case 5:
				this.border = (Border)target;
				return;
			case 6:
				this.ButtonsGrid = (Grid)target;
				return;
			case 7:
				this.border1 = (Border)target;
				return;
			case 8:
				this.ScriptsGrid = (Grid)target;
				return;
			case 9:
				this.ScriptMenu = (System.Windows.Controls.ListBox)target;
				return;
			case 10:
				this.GamesGrid = (Grid)target;
				return;
			case 11:
				this.GamesMenu = (System.Windows.Controls.ListBox)target;
				return;
			case 12:
				this.Logo = (Image)target;
				return;
			case 13:
				this.SettingsGrid = (Grid)target;
				return;
			case 14:
				this.KillRbx = (System.Windows.Controls.Button)target;
				this.KillRbx.Click += this.KillRbx_Click;
				return;
			case 15:
				((System.Windows.Controls.Button)target).Click += this.RestartUI;
				return;
			case 16:
				((System.Windows.Controls.CheckBox)target).Unchecked += this.TopMostUnChecked;
				((System.Windows.Controls.CheckBox)target).Checked += this.TopMostChecked;
				return;
			case 17:
				this.ToolCheck = (System.Windows.Controls.CheckBox)target;
				this.ToolCheck.Checked += this.ToolTipChecked;
				this.ToolCheck.Unchecked += this.ToolTipUnChecked;
				return;
			case 18:
				this.whomst = (System.Windows.Controls.CheckBox)target;
				this.whomst.Checked += this.AutoInjectChecked;
				this.whomst.Unchecked += this.AutoInjectUnChecked;
				return;
			case 19:
				this.Execute = (System.Windows.Controls.Button)target;
				this.Execute.Click += this.ExecuteButton;
				this.Execute.MouseEnter += this.Execute_MouseEnter;
				this.Execute.MouseLeave += this.Execute_MouseLeave;
				return;
			case 20:
				this.Clear = (System.Windows.Controls.Button)target;
				this.Clear.Click += this.ClearButton;
				this.Clear.MouseEnter += this.Clear_MouseEnter;
				this.Clear.MouseLeave += this.Clear_MouseLeave;
				return;
			case 21:
				this.SaveFileButton = (System.Windows.Controls.Button)target;
				this.SaveFileButton.Click += this.SaveFile;
				this.SaveFileButton.MouseEnter += this.SaveFile_MouseEnter;
				this.SaveFileButton.MouseLeave += this.SaveFile_MouseLeave;
				return;
			case 22:
				this.execute_vorder = (Border)target;
				return;
			case 23:
				this.gay_label = (System.Windows.Controls.Label)target;
				return;
			case 24:
				this.execute_vorder_Copy = (Border)target;
				return;
			case 25:
				this.gay_label_Copy = (System.Windows.Controls.Label)target;
				return;
			case 26:
				this.execute_vorder_Copy1 = (Border)target;
				return;
			case 27:
				this.gay_label_Copy1 = (System.Windows.Controls.Label)target;
				return;
			case 28:
				this.execute_vorder_Copy2 = (Border)target;
				return;
			case 29:
				this.gay_label_Copy2 = (System.Windows.Controls.Label)target;
				return;
			case 30:
				this.execute_vorder_Copy3 = (Border)target;
				return;
			case 31:
				this.gay_label_Copy3 = (System.Windows.Controls.Label)target;
				return;
			case 32:
				this.List = (System.Windows.Controls.Button)target;
				this.List.Click += this.ListButton;
				this.List.MouseEnter += this.List_MouseEnter;
				this.List.MouseLeave += this.List_MouseLeave;
				return;
			case 33:
				this.Settings = (System.Windows.Controls.Button)target;
				this.Settings.Click += this.OpenSettings;
				this.Settings.MouseEnter += this.Settings_MouseEnter;
				this.Settings.MouseLeave += this.Settings_MouseLeave;
				return;
			case 34:
				this.Inject = (System.Windows.Controls.Button)target;
				this.Inject.Click += this.InjectButton;
				this.Inject.MouseEnter += this.Inject_MouseEnter;
				this.Inject.MouseLeave += this.Inject_MouseLeave;
				return;
			case 35:
				this.execute_vorder_Copy4 = (Border)target;
				return;
			case 36:
				this.gay_label_Copy4 = (System.Windows.Controls.Label)target;
				return;
			case 37:
				this.label = (System.Windows.Controls.Label)target;
				return;
			case 38:
				this.Execute_Copy = (System.Windows.Controls.Button)target;
				this.Execute_Copy.Click += this.FileButton;
				return;
			case 39:
				this.Execute_Copy1 = (System.Windows.Controls.Button)target;
				this.Execute_Copy1.Click += this.ViewButton;
				return;
			case 40:
				this.Execute_Copy2 = (System.Windows.Controls.Button)target;
				this.Execute_Copy2.Click += this.DiscordButton;
				return;
			case 41:
				this.Tabs = (System.Windows.Controls.TabControl)target;
				this.Tabs.SelectionChanged += this.Tabs_SelectionChanged;
				return;
			case 42:
				this.ConsoleBox = (System.Windows.Controls.TextBox)target;
				return;
			case 43:
				this.FilePanel = (StackPanel)target;
				this.FilePanel.MouseLeave += this.FilePanel_MouseLeave;
				return;
			case 44:
				this.Execute_Copy4 = (System.Windows.Controls.Button)target;
				this.Execute_Copy4.Click += this.ExecuteButton;
				return;
			case 45:
				this.Execute_Copy3 = (System.Windows.Controls.Button)target;
				this.Execute_Copy3.Click += this.SaveFile;
				return;
			case 46:
				this.Execute_Copy5 = (System.Windows.Controls.Button)target;
				this.Execute_Copy5.Click += this.OpenFileButton;
				return;
			case 47:
				this.Execute_Copy6 = (System.Windows.Controls.Button)target;
				this.Execute_Copy6.Click += this.Exit;
				return;
			case 48:
				this.Execute_Copy7 = (System.Windows.Controls.Button)target;
				this.Execute_Copy7.Click += this.Minimize;
				return;
			case 49:
				this.ViewPanel = (StackPanel)target;
				this.ViewPanel.MouseLeave += this.ViewPanel_MouseLeave;
				return;
			case 50:
				this.Execute_Copy8 = (System.Windows.Controls.Button)target;
				this.Execute_Copy8.Click += this.ExecuteButton;
				return;
			case 51:
				this.Execute_Copy10 = (System.Windows.Controls.Button)target;
				this.Execute_Copy10.Click += this.ExecuteButton;
				return;
			}
			this._contentLoaded = true;
		}

		// Token: 0x0600004E RID: 78 RVA: 0x00003D54 File Offset: 0x00001F54
		[DebuggerNonUserCode]
		[GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
		[EditorBrowsable(EditorBrowsableState.Never)]
		void IStyleConnector.Connect(int connectionId, object target)
		{
			if (connectionId == 2)
			{
				((System.Windows.Controls.Button)target).Click += this.CloseButton_Click;
				return;
			}
			if (connectionId != 3)
			{
				return;
			}
			((System.Windows.Controls.Button)target).Click += this.AddTabButton_Click;
		}

		// Token: 0x04000015 RID: 21
		private DiscordRpc.EventHandlers handlers;

		// Token: 0x04000016 RID: 22
		private DiscordRpc.RichPresence presence;

		// Token: 0x04000017 RID: 23
		private DispatcherTimer ToolTips = new DispatcherTimer();

		// Token: 0x04000018 RID: 24
		private DispatcherTimer dispatcherTimer = new DispatcherTimer();

		// Token: 0x04000019 RID: 25
		public bool AutoInject;

		// Token: 0x0400001A RID: 26
		private int LastPID_InjectedInto;

		// Token: 0x0400001B RID: 27
		private Storyboard StoryBoard = new Storyboard();

		// Token: 0x0400001E RID: 30
		public bool GamesCheck;

		// Token: 0x0400001F RID: 31
		public bool ScriptsCheck;

		// Token: 0x04000020 RID: 32
		public bool SettingsCheck;

		// Token: 0x04000021 RID: 33
		public bool ToolTipCheck;

		// Token: 0x04000022 RID: 34
		private bool CurrentOpen;

		// Token: 0x04000023 RID: 35
		internal MainWindow Perth;

		// Token: 0x04000024 RID: 36
		internal Grid Main;

		// Token: 0x04000025 RID: 37
		internal Border border;

		// Token: 0x04000026 RID: 38
		internal Grid ButtonsGrid;

		// Token: 0x04000027 RID: 39
		internal Border border1;

		// Token: 0x04000028 RID: 40
		internal Grid ScriptsGrid;

		// Token: 0x04000029 RID: 41
		internal System.Windows.Controls.ListBox ScriptMenu;

		// Token: 0x0400002A RID: 42
		internal Grid GamesGrid;

		// Token: 0x0400002B RID: 43
		internal System.Windows.Controls.ListBox GamesMenu;

		// Token: 0x0400002C RID: 44
		internal Image Logo;

		// Token: 0x0400002D RID: 45
		internal Grid SettingsGrid;

		// Token: 0x0400002E RID: 46
		internal System.Windows.Controls.Button KillRbx;

		// Token: 0x0400002F RID: 47
		internal System.Windows.Controls.CheckBox ToolCheck;

		// Token: 0x04000030 RID: 48
		internal System.Windows.Controls.CheckBox whomst;

		// Token: 0x04000031 RID: 49
		internal System.Windows.Controls.Button Execute;

		// Token: 0x04000032 RID: 50
		internal System.Windows.Controls.Button Clear;

		// Token: 0x04000033 RID: 51
		internal System.Windows.Controls.Button SaveFileButton;

		// Token: 0x04000034 RID: 52
		internal Border execute_vorder;

		// Token: 0x04000035 RID: 53
		internal System.Windows.Controls.Label gay_label;

		// Token: 0x04000036 RID: 54
		internal Border execute_vorder_Copy;

		// Token: 0x04000037 RID: 55
		internal System.Windows.Controls.Label gay_label_Copy;

		// Token: 0x04000038 RID: 56
		internal Border execute_vorder_Copy1;

		// Token: 0x04000039 RID: 57
		internal System.Windows.Controls.Label gay_label_Copy1;

		// Token: 0x0400003A RID: 58
		internal Border execute_vorder_Copy2;

		// Token: 0x0400003B RID: 59
		internal System.Windows.Controls.Label gay_label_Copy2;

		// Token: 0x0400003C RID: 60
		internal Border execute_vorder_Copy3;

		// Token: 0x0400003D RID: 61
		internal System.Windows.Controls.Label gay_label_Copy3;

		// Token: 0x0400003E RID: 62
		internal System.Windows.Controls.Button List;

		// Token: 0x0400003F RID: 63
		internal System.Windows.Controls.Button Settings;

		// Token: 0x04000040 RID: 64
		internal System.Windows.Controls.Button Inject;

		// Token: 0x04000041 RID: 65
		internal Border execute_vorder_Copy4;

		// Token: 0x04000042 RID: 66
		internal System.Windows.Controls.Label gay_label_Copy4;

		// Token: 0x04000043 RID: 67
		internal System.Windows.Controls.Label label;

		// Token: 0x04000044 RID: 68
		internal System.Windows.Controls.Button Execute_Copy;

		// Token: 0x04000045 RID: 69
		internal System.Windows.Controls.Button Execute_Copy1;

		// Token: 0x04000046 RID: 70
		internal System.Windows.Controls.Button Execute_Copy2;

		// Token: 0x04000047 RID: 71
		internal System.Windows.Controls.TabControl Tabs;

		// Token: 0x04000048 RID: 72
		internal System.Windows.Controls.TextBox ConsoleBox;

		// Token: 0x04000049 RID: 73
		internal StackPanel FilePanel;

		// Token: 0x0400004A RID: 74
		internal System.Windows.Controls.Button Execute_Copy4;

		// Token: 0x0400004B RID: 75
		internal System.Windows.Controls.Button Execute_Copy3;

		// Token: 0x0400004C RID: 76
		internal System.Windows.Controls.Button Execute_Copy5;

		// Token: 0x0400004D RID: 77
		internal System.Windows.Controls.Button Execute_Copy6;

		// Token: 0x0400004E RID: 78
		internal System.Windows.Controls.Button Execute_Copy7;

		// Token: 0x0400004F RID: 79
		internal StackPanel ViewPanel;

		// Token: 0x04000050 RID: 80
		internal System.Windows.Controls.Button Execute_Copy8;

		// Token: 0x04000051 RID: 81
		internal System.Windows.Controls.Button Execute_Copy10;

		// Token: 0x04000052 RID: 82
		private bool _contentLoaded;

		// Token: 0x02000006 RID: 6
		// (Invoke) Token: 0x06000050 RID: 80
		public delegate void EventHandler(string e);
	}
}
