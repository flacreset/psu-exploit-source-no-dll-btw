<Application
	x:Class="Perth.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Perth" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
	<Application.Resources>
		<ResourceDictionary>
			<SolidColorBrush
				Color="#232323"
				x:Key="TabItem.Selected.Background" />
			<SolidColorBrush
				Color="#20ffffff"
				x:Key="TabItem.MouseOver.Background" />
			<SolidColorBrush
				Color="#00ffffff"
				x:Key="TabItem.Static.Background" />
			<SolidColorBrush
				Color="Transparent"
				x:Key="ScrollBar.Static.Background" />
			<SolidColorBrush
				Color="#ffffff"
				x:Key="ScrollBar.Pressed.Glyph" />
			<SolidColorBrush
				Color="#a0a0a0"
				x:Key="ScrollBar.MouseOver.Glyph" />
			<SolidColorBrush
				Color="#404040"
				x:Key="ScrollBar.Disabled.Glyph" />
			<SolidColorBrush
				Color="#808080"
				x:Key="ScrollBar.Static.Glyph" />
			<SolidColorBrush
				Color="#303030"
				x:Key="ScrollBar.MouseOver.Background" />
			<SolidColorBrush
				Color="#404040"
				x:Key="ScrollBar.Pressed.Background" />
			<SolidColorBrush
				Color="#181818"
				x:Key="ScrollBar.Disabled.Background" />
			<SolidColorBrush
				Color="#60ffffff"
				x:Key="ScrollBar.Static.Thumb" />
			<SolidColorBrush
				Color="#70ffffff"
				x:Key="ScrollBar.MouseOver.Thumb" />
			<SolidColorBrush
				Color="#80ffffff"
				x:Key="ScrollBar.Pressed.Thumb" />
			<ControlTemplate
				TargetType="{x:Type Window}"
				x:Key="WindowTemplateKey">
				<Border
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					Background="{TemplateBinding Background}">
					<Grid>
						<AdornerDecorator>
							<ContentPresenter />
						</AdornerDecorator>
						<ResizeGrip
							Name="WindowResizeGrip"
							HorizontalAlignment="Right"
							IsTabStop="False"
							Visibility="Collapsed"
							VerticalAlignment="Bottom" />
					</Grid>
				</Border>
				<ControlTemplate.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="Window.ResizeMode"
								Value="CanResizeWithGrip" />
							<Condition
								Property="Window.WindowState"
								Value="Normal" />
						</MultiTrigger.Conditions>
						<Setter
							TargetName="WindowResizeGrip"
							Property="Visibility"
							Value="Visible" />
					</MultiTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<Style
				TargetType="{x:Type CheckBox}"
				x:Key="SettingsCheck">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="6 1" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type CheckBox}">
							<Grid>
								<Border
									Name="border"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="1"
									SnapsToDevicePixels="True"
									CornerRadius="3">
									<ContentPresenter
										Name="contentPresenter"
										Focusable="False"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										Margin="{TemplateBinding Padding}"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
								<Label
									Name="label"
									Content=""
									Foreground="#FF0AB639"
									VerticalContentAlignment="Top"
									HorizontalContentAlignment="Center"
									FontFamily="Segoe UI Symbol"
									FontSize="12" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<Setter
										TargetName="label"
										Property="Content"
										Value="î„Š" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="True">
									<Setter
										TargetName="label"
										Property="Foreground"
										Value="#FF0AB639" />
								</Trigger>
								<Trigger
									Property="ToggleButton.IsChecked"
									Value="False">
									<Setter
										TargetName="label"
										Property="Content"
										Value="" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Window}"
				x:Key="CustomWindow">
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.WindowTextBrushKey}" />
				<Setter
					Property="Background"
					Value="{DynamicResource SystemColors.WindowBrushKey}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Window}">
							<Border
								CornerRadius="3"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}">
								<AdornerDecorator>
									<ContentPresenter />
								</AdornerDecorator>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="Window.ResizeMode"
						Value="CanResizeWithGrip">
						<Setter
							Property="Template"
							Value="{StaticResource WindowTemplateKey}" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type RepeatButton}"
				x:Key="ScrollBarButton">
				<Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
				<Setter
					Property="VerticalContentAlignment"
					Value="Center" />
				<Setter
					Property="Padding"
					Value="1" />
				<Setter
					Property="Focusable"
					Value="False" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RepeatButton}">
							<Border
								Name="border"
								SnapsToDevicePixels="True"
								Background="{StaticResource ScrollBar.Static.Background}">
								<ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="border"
										Property="Background"
										Value="{StaticResource ScrollBar.MouseOver.Background}" />
								</Trigger>
								<Trigger
									Property="IsPressed"
									Value="True">
									<Setter
										TargetName="border"
										Property="Background"
										Value="{StaticResource ScrollBar.Pressed.Background}" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="contentPresenter"
										Property="UIElement.Opacity"
										Value="0.56" />
									<Setter
										TargetName="border"
										Property="Background"
										Value="{StaticResource ScrollBar.Disabled.Background}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type RepeatButton}"
				x:Key="RepeatButtonTransparent">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="Focusable"
					Value="False" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RepeatButton}">
							<Rectangle
								Fill="{TemplateBinding Background}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Thumb}"
				x:Key="ScrollBarThumbVertical">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Thumb}">
							<Border
								Name="rectangle"
								CornerRadius="1"
								Height="{TemplateBinding Height}"
								SnapsToDevicePixels="True"
								Width="{TemplateBinding Width}"
								Background="{StaticResource ScrollBar.Static.Thumb}" />
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Background"
										Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
								</Trigger>
								<Trigger
									Property="Thumb.IsDragging"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Background"
										Value="{StaticResource ScrollBar.Pressed.Thumb}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type Thumb}"
				x:Key="ScrollBarThumbHorizontal">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Thumb}">
							<Border
								Name="rectangle"
								CornerRadius="1"
								Height="{TemplateBinding Height}"
								SnapsToDevicePixels="True"
								Width="{TemplateBinding Width}"
								Background="{StaticResource ScrollBar.Static.Thumb}" />
							<ControlTemplate.Triggers>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Background"
										Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
								</Trigger>
								<Trigger
									Property="Thumb.IsDragging"
									Value="True">
									<Setter
										TargetName="rectangle"
										Property="Background"
										Value="{StaticResource ScrollBar.Pressed.Thumb}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				TargetType="{x:Type ScrollBar}"
				x:Key="{x:Type ScrollBar}">
				<Setter
					Property="Stylus.IsPressAndHoldEnabled"
					Value="False" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Background"
					Value="{StaticResource ScrollBar.Static.Background}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
				<Setter
					Property="Width"
					Value="8" />
				<Setter
					Property="MinWidth"
					Value="8" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ScrollBar}">
							<Grid
								Name="Bg"
								SnapsToDevicePixels="True">
								<Grid.RowDefinitions>
									<RowDefinition
										Height="0.00001*" />
								</Grid.RowDefinitions>
								<Border
									Background="{TemplateBinding Background}"
									Grid.Row="0" />
								<Track
									Name="PART_Track"
									IsDirectionReversed="True"
									IsEnabled="{TemplateBinding IsMouseOver}"
									Grid.Row="0">
									<Track.DecreaseRepeatButton>
										<RepeatButton
											Command="{x:Static ScrollBar.PageUpCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton
											Command="{x:Static ScrollBar.PageDownCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb
											Style="{StaticResource ScrollBarThumbVertical}" />
									</Track.Thumb>
								</Track>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
										<Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
									</MultiDataTrigger.Conditions>
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
										<Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
									</MultiDataTrigger.Conditions>
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
										<Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
									</MultiDataTrigger.Conditions>
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
										<Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
									</MultiDataTrigger.Conditions>
								</MultiDataTrigger>
								<Trigger
									Property="IsEnabled"
									Value="False" />
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
						Property="ScrollBar.Orientation"
						Value="Horizontal">
						<Setter
							Property="Width"
							Value="Auto" />
						<Setter
							Property="MinWidth"
							Value="0" />
						<Setter
							Property="Height"
							Value="8" />
						<Setter
							Property="MinHeight"
							Value="8" />
						<Setter
							Property="Template">
							<Setter.Value>
								<ControlTemplate
									TargetType="{x:Type ScrollBar}">
									<Grid
										Name="Bg"
										SnapsToDevicePixels="True">
										<Grid.ColumnDefinitions>
											<ColumnDefinition
												Width="0.00001*" />
										</Grid.ColumnDefinitions>
										<Border
											Background="{TemplateBinding Background}"
											Grid.Column="0" />
										<Track
											Name="PART_Track"
											Grid.Column="0"
											IsEnabled="{TemplateBinding IsMouseOver}">
											<Track.DecreaseRepeatButton>
												<RepeatButton
													Command="{x:Static ScrollBar.PageLeftCommand}"
													Style="{StaticResource RepeatButtonTransparent}" />
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton
													Command="{x:Static ScrollBar.PageRightCommand}"
													Style="{StaticResource RepeatButtonTransparent}" />
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb
													Style="{StaticResource ScrollBarThumbHorizontal}" />
											</Track.Thumb>
										</Track>
									</Grid>
									<ControlTemplate.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
												<Condition
													Value="true"
													Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
											</MultiDataTrigger.Conditions>
										</MultiDataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
												<Condition
													Value="true"
													Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
											</MultiDataTrigger.Conditions>
										</MultiDataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
												<Condition
													Value="false"
													Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
											</MultiDataTrigger.Conditions>
										</MultiDataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
												<Condition
													Value="false"
													Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
											</MultiDataTrigger.Conditions>
										</MultiDataTrigger>
										<Trigger
											Property="IsEnabled"
											Value="False" />
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style
				TargetType="{x:Type ScrollViewer}"
				x:Key="{x:Type ScrollViewer}">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ScrollViewer}">
							<Grid
								Name="Grid"
								Background="{TemplateBinding Background}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										Width="*" />
									<ColumnDefinition
										Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition
										Height="*" />
									<RowDefinition
										Height="Auto" />
								</Grid.RowDefinitions>
								<Rectangle
									Name="Corner"
									Grid.Column="1"
									Grid.Row="1"
									Fill="{StaticResource ScrollBar.Static.Background}" />
								<ScrollContentPresenter
									Name="PART_ScrollContentPresenter"
									CanContentScroll="{TemplateBinding CanContentScroll}"
									CanHorizontallyScroll="False"
									CanVerticallyScroll="False"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									Content="{TemplateBinding Content}"
									Grid.Column="0"
									Margin="{TemplateBinding Padding}"
									Grid.Row="0" />
								<ScrollBar
									Name="PART_VerticalScrollBar"
									AutomationProperties.AutomationId="VerticalScrollBar"
									Cursor="Arrow"
									Grid.Column="1"
									Maximum="{TemplateBinding ScrollableHeight}"
									Minimum="0"
									Grid.Row="0"
									Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
									ViewportSize="{TemplateBinding ViewportHeight}"
									Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
								<ScrollBar
									Name="PART_HorizontalScrollBar"
									AutomationProperties.AutomationId="HorizontalScrollBar"
									Cursor="Arrow"
									Grid.Column="0"
									Maximum="{TemplateBinding ScrollableWidth}"
									Minimum="0"
									Orientation="Horizontal"
									Grid.Row="1"
									Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
									ViewportSize="{TemplateBinding ViewportWidth}"
									Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="FocusVisual">
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle
								Margin="2"
								SnapsToDevicePixels="True"
								Stroke="{DynamicResource SystemColors.ControlTextBrushKey}"
								StrokeThickness="1"
								StrokeDashArray="1 2" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush
				Color="#282828"
				x:Key="Item.MouseOver.Background" />
			<SolidColorBrush
				Color="#353535"
				x:Key="Item.MouseOver.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="Item.SelectedInactive.Background" />
			<SolidColorBrush
				Color="#282828"
				x:Key="Item.SelectedInactive.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="Item.SelectedActive.Background" />
			<SolidColorBrush
				Color="#353535"
				x:Key="Item.SelectedActive.Border" />
			<Style
				TargetType="{x:Type ListBoxItem}"
				x:Key="{x:Type ListBoxItem}">
				<Setter
					Property="UIElement.SnapsToDevicePixels"
					Value="True" />
				<Setter
					Property="Padding"
					Value="4,1" />
				<Setter
					Property="HorizontalContentAlignment"
					Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter
					Property="VerticalContentAlignment"
					Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter
					Property="Background"
					Value="#00FFFFFF" />
				<Setter
					Property="BorderBrush"
					Value="#00FFFFFF" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ListBoxItem}">
							<Border
								Name="Bd"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="True">
								<ContentPresenter
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="UIElement.IsMouseOver"
											Value="True" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="Bd"
										Property="Background"
										Value="{StaticResource Item.MouseOver.Background}" />
									<Setter
										TargetName="Bd"
										Property="BorderBrush"
										Value="{StaticResource Item.MouseOver.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="Selector.IsSelectionActive"
											Value="False" />
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="True" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="Bd"
										Property="Background"
										Value="{StaticResource Item.SelectedInactive.Background}" />
									<Setter
										TargetName="Bd"
										Property="BorderBrush"
										Value="{StaticResource Item.SelectedInactive.Border}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition
											Property="Selector.IsSelectionActive"
											Value="True" />
										<Condition
											Property="ListBoxItem.IsSelected"
											Value="True" />
									</MultiTrigger.Conditions>
									<Setter
										TargetName="Bd"
										Property="Background"
										Value="{StaticResource Item.SelectedActive.Background}" />
									<Setter
										TargetName="Bd"
										Property="BorderBrush"
										Value="{StaticResource Item.SelectedActive.Border}" />
								</MultiTrigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="Bd"
										Value="{DynamicResource SystemColors.GrayTextBrushKey}"
										Property="Foreground" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.Static.Background">
				<GradientStop
					Color="#282828"
					Offset="0.0" />
				<GradientStop
					Color="#282828"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#555555"
				x:Key="ComboBox.Static.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Static.Editable.Background" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Static.Editable.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Static.Editable.Button.Background" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Static.Editable.Button.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.MouseOver.Glyph" />
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.MouseOver.Background">
				<GradientStop
					Color="#282828"
					Offset="0.0" />
				<GradientStop
					Color="#282828"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.MouseOver.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.MouseOver.Editable.Background" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.MouseOver.Editable.Border" />
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.MouseOver.Editable.Button.Background">
				<GradientStop
					Color="#282828"
					Offset="0.0" />
				<GradientStop
					Color="#282828"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.MouseOver.Editable.Button.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Pressed.Glyph" />
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.Pressed.Background">
				<GradientStop
					Color="#282828"
					Offset="0.0" />
				<GradientStop
					Color="#282828"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Pressed.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Pressed.Editable.Background" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Pressed.Editable.Border" />
			<LinearGradientBrush
				EndPoint="0,1"
				StartPoint="0,0"
				x:Key="ComboBox.Pressed.Editable.Button.Background">
				<GradientStop
					Color="#282828"
					Offset="0.0" />
				<GradientStop
					Color="#282828"
					Offset="1.0" />
			</LinearGradientBrush>
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Pressed.Editable.Button.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Disabled.Glyph" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Disabled.Background" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Disabled.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Disabled.Editable.Background" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Disabled.Editable.Border" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Disabled.Editable.Button.Background" />
			<SolidColorBrush
				Color="#282828"
				x:Key="ComboBox.Disabled.Editable.Button.Border" />
			<SolidColorBrush
				Color="#FF606060"
				x:Key="ComboBox.Static.Glyph" />
			<Style
				TargetType="{x:Type ToggleButton}"
				x:Key="ComboBoxToggleButton">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Focusable"
					Value="False" />
				<Setter
					Property="ButtonBase.ClickMode"
					Value="Press" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ToggleButton}">
							<Border
								Name="templateRoot"
								SnapsToDevicePixels="True"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{StaticResource ComboBox.Static.Background}"
								BorderBrush="{StaticResource ComboBox.Static.Border}">
								<Border
									Name="splitBorder"
									Width="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}"
									SnapsToDevicePixels="True"
									Margin="0"
									HorizontalAlignment="Right"
									BorderThickness="1"
									BorderBrush="#00FFFFFF">
									<Path
										Name="arrow"
										VerticalAlignment="Center"
										Margin="0"
										HorizontalAlignment="Center"
										Data="F1 M0,0 L2.667,2.66665 L5.3334,0 L5.3334,-1.78168 L2.6667,0.88501 L0,-1.78168 L0,0"
										Fill="{StaticResource ComboBox.Static.Glyph}" />
								</Border>
							</Border>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
										<Condition
											Value="false"
											Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="false"
											Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="true"
											Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Background"
										Value="{StaticResource ComboBox.Static.Editable.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.Static.Editable.Border}" />
									<Setter
										TargetName="splitBorder"
										Property="Background"
										Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
									<Setter
										TargetName="splitBorder"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
								</MultiDataTrigger>
								<Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
									<Setter
										TargetName="arrow"
										Property="Fill"
										Value="{StaticResource ComboBox.MouseOver.Glyph}" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="false"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Background"
										Value="{StaticResource ComboBox.MouseOver.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.MouseOver.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="true"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Background"
										Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
									<Setter
										TargetName="splitBorder"
										Property="Background"
										Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
									<Setter
										TargetName="splitBorder"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
								</MultiDataTrigger>
								<Trigger
									Property="IsPressed"
									Value="True">
									<Setter
										TargetName="arrow"
										Property="Fill"
										Value="{StaticResource ComboBox.Pressed.Glyph}" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="false"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Background"
										Value="{StaticResource ComboBox.Pressed.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.Pressed.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="true"
											Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="true"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Background"
										Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
									<Setter
										TargetName="splitBorder"
										Property="Background"
										Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
									<Setter
										TargetName="splitBorder"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
								</MultiDataTrigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										TargetName="arrow"
										Property="Fill"
										Value="{StaticResource ComboBox.Disabled.Glyph}" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="false"
											Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="false"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Background"
										Value="{StaticResource ComboBox.Disabled.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.Disabled.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition
											Value="false"
											Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
										<Condition
											Value="true"
											Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter
										TargetName="templateRoot"
										Property="Background"
										Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
									<Setter
										TargetName="templateRoot"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
									<Setter
										TargetName="splitBorder"
										Property="Background"
										Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
									<Setter
										TargetName="splitBorder"
										Property="BorderBrush"
										Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
								</MultiDataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate
				TargetType="{x:Type ComboBox}"
				x:Key="ComboBoxTemplate">
				<Grid
					Name="templateRoot"
					SnapsToDevicePixels="True">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							MinWidth="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}"
							Width="0" />
					</Grid.ColumnDefinitions>
					<Popup
						Name="PART_Popup"
						AllowsTransparency="True"
						Grid.ColumnSpan="2"
						Margin="1"
						PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}"
						Placement="Bottom"
						IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
						<Themes:SystemDropShadowChrome
							Name="shadow"
							Color="Transparent"
							MaxHeight="{TemplateBinding MaxDropDownHeight}"
							MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
							<Border
								Name="dropDownBorder"
								BorderBrush="{DynamicResource SystemColors.WindowFrameBrushKey}"
								BorderThickness="1"
								Background="{DynamicResource SystemColors.WindowBrushKey}">
								<ScrollViewer
									Name="DropDownScrollViewer">
									<Grid
										Name="grid"
										RenderOptions.ClearTypeHint="Enabled">
										<Canvas
											Name="canvas"
											HorizontalAlignment="Left"
											Height="0"
											VerticalAlignment="Top"
											Width="0">
											<Rectangle
												Name="opaqueRect"
												Fill="{Binding Background, ElementName=dropDownBorder}"
												Height="{Binding ActualHeight, ElementName=dropDownBorder}"
												Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
										</Canvas>
										<ItemsPresenter
											Name="ItemsPresenter"
											KeyboardNavigation.DirectionalNavigation="Contained"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>
					<ToggleButton
						Name="toggleButton"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Grid.ColumnSpan="2"
						Style="{StaticResource ComboBoxToggleButton}"
						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
					<ContentPresenter
						Name="contentPresenter"
						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
						Content="{TemplateBinding SelectionBoxItem}"
						ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						IsHitTestVisible="False"
						Margin="{TemplateBinding Padding}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger
						SourceName="PART_Popup"
						Property="Popup.HasDropShadow"
						Value="True">
						<Setter
							TargetName="shadow"
							Property="Margin"
							Value="0,0,5,5" />
						<Setter
							TargetName="shadow"
							Property="Themes:SystemDropShadowChrome.Color"
							Value="#71000000" />
					</Trigger>
					<Trigger
						Property="ItemsControl.HasItems"
						Value="False">
						<Setter
							TargetName="dropDownBorder"
							Property="Height"
							Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="ItemsControl.IsGrouping"
								Value="True" />
							<Condition
								Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
								Value="False" />
						</MultiTrigger.Conditions>
						<Setter
							Property="CanContentScroll"
							Value="False" />
					</MultiTrigger>
					<Trigger
						SourceName="DropDownScrollViewer"
						Property="CanContentScroll"
						Value="False">
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Top"
							Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Left"
							Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<SolidColorBrush
				Color="#FFFFFFFF"
				x:Key="TextBox.Static.Background" />
			<Style
				TargetType="{x:Type TextBox}"
				x:Key="ComboBoxEditableTextBox">
				<Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
				<Setter
					Property="UIElement.AllowDrop"
					Value="True" />
				<Setter
					Property="MinWidth"
					Value="0" />
				<Setter
					Property="MinHeight"
					Value="0" />
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="VerticalFirst" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type TextBox}">
							<ScrollViewer
								Name="PART_ContentHost"
								Background="#00FFFFFF"
								Focusable="False"
								HorizontalScrollBarVisibility="Hidden"
								VerticalScrollBarVisibility="Hidden" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate
				TargetType="{x:Type ComboBox}"
				x:Key="ComboBoxEditableTemplate">
				<Grid
					Name="templateRoot"
					SnapsToDevicePixels="True">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							MinWidth="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}"
							Width="0" />
					</Grid.ColumnDefinitions>
					<Popup
						Name="PART_Popup"
						AllowsTransparency="True"
						Grid.ColumnSpan="2"
						PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}"
						Placement="Bottom"
						IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
						<Themes:SystemDropShadowChrome
							Name="shadow"
							Color="Transparent"
							MaxHeight="{TemplateBinding MaxDropDownHeight}"
							MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
							<Border
								Name="dropDownBorder"
								BorderBrush="{DynamicResource SystemColors.WindowFrameBrushKey}"
								BorderThickness="1"
								Background="{DynamicResource SystemColors.WindowBrushKey}">
								<ScrollViewer
									Name="DropDownScrollViewer">
									<Grid
										Name="grid"
										RenderOptions.ClearTypeHint="Enabled">
										<Canvas
											Name="canvas"
											HorizontalAlignment="Left"
											Height="0"
											VerticalAlignment="Top"
											Width="0">
											<Rectangle
												Name="opaqueRect"
												Fill="{Binding Background, ElementName=dropDownBorder}"
												Height="{Binding ActualHeight, ElementName=dropDownBorder}"
												Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
										</Canvas>
										<ItemsPresenter
											Name="ItemsPresenter"
											KeyboardNavigation.DirectionalNavigation="Contained"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>
					<ToggleButton
						Name="toggleButton"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Grid.ColumnSpan="2"
						Style="{StaticResource ComboBoxToggleButton}"
						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
					<Border
						Name="border"
						Margin="{TemplateBinding BorderThickness}"
						Background="{StaticResource TextBox.Static.Background}">
						<TextBox
							Name="PART_EditableTextBox"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							Style="{StaticResource ComboBoxEditableTextBox}"
							IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger
						Property="IsEnabled"
						Value="False">
						<Setter
							TargetName="border"
							Property="UIElement.Opacity"
							Value="0.56" />
					</Trigger>
					<Trigger
						Property="UIElement.IsKeyboardFocusWithin"
						Value="True">
						<Setter
							Property="Foreground"
							Value="#FF000000" />
					</Trigger>
					<Trigger
						SourceName="PART_Popup"
						Property="Popup.HasDropShadow"
						Value="True">
						<Setter
							TargetName="shadow"
							Property="Margin"
							Value="0,0,5,5" />
						<Setter
							TargetName="shadow"
							Property="Themes:SystemDropShadowChrome.Color"
							Value="#71000000" />
					</Trigger>
					<Trigger
						Property="ItemsControl.HasItems"
						Value="False">
						<Setter
							TargetName="dropDownBorder"
							Property="Height"
							Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition
								Property="ItemsControl.IsGrouping"
								Value="True" />
							<Condition
								Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
								Value="False" />
						</MultiTrigger.Conditions>
						<Setter
							Property="CanContentScroll"
							Value="False" />
					</MultiTrigger>
					<Trigger
						SourceName="DropDownScrollViewer"
						Property="CanContentScroll"
						Value="False">
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Top"
							Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter
							TargetName="opaqueRect"
							Property="Canvas.Left"
							Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<Style
				TargetType="{x:Type ComboBox}"
				x:Key="ComboBoxStyle">
				<Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
				<Setter
					Property="Background"
					Value="{StaticResource ComboBox.Static.Background}" />
				<Setter
					Property="BorderBrush"
					Value="{StaticResource ComboBox.Static.Border}" />
				<Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.WindowTextBrushKey}" />
				<Setter
					Property="BorderThickness"
					Value="1" />
				<Setter
					Property="HorizontalScrollBarVisibility"
					Value="Auto" />
				<Setter
					Property="VerticalScrollBarVisibility"
					Value="Auto" />
				<Setter
					Property="Padding"
					Value="6,3,5,3" />
				<Setter
					Property="CanContentScroll"
					Value="True" />
				<Setter
					Property="ScrollViewer.PanningMode"
					Value="Both" />
				<Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
				<Setter
					Property="Template"
					Value="{StaticResource ComboBoxTemplate}" />
				<Style.Triggers>
					<Trigger
						Property="ComboBox.IsEditable"
						Value="True">
						<Setter
							Property="IsTabStop"
							Value="False" />
						<Setter
							Property="Padding"
							Value="2" />
						<Setter
							Property="Template"
							Value="{StaticResource ComboBoxEditableTemplate}" />
					</Trigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>
